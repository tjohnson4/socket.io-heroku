<DOCTYPE html>
<html>
<head>
<meta charset="UTF-8" />
<title>SocketIO</title>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script type="text/javascript">
var urlParams = {};
(function () {
 var match,
 pl   = /\+/g, // Regex for replacing addition symbol with a space
 search = /([^&=]+)=?([^&]*)/g,
 decode = function (s) { return decodeURIComponent(s.replace(pl, " ")); },
 query = window.location.search.substring(1);
 while (match = search.exec(query))
 urlParams[decode(match[1])] = decode(match[2]);
 })();
var io_socket;
var guid;
var opts = {};
var sock_url = 'http://localhost';
var sources = {
  youtube: {
    link : 'https://www.youtube.com/watch?v=FoD28oLJUnY',
    label : "YouTube"
  },
  youtube_purchase: {
    link : 'https://www.youtube.com/watch?v=FoD28oLJUnY',
    label : "YouTube"
  },
  hulu_free: {
    link : '975354',
    label : 'Hulu'
  },
  hulu_plus: {
    link : '975354',
    label : 'Hulu'
  },
  google_play : {
    link : 'QkDSN5dBHXY', 
    label : "Google Play"
  },
  netflix : {
    link : '80119234',
    label : "Netflix"
  }
}
function connect(){

  io_socket = io();
  io_socket.on('connect', function() {
      display_message("Socket connected");
      });
  io_socket.on('joined', function(obj) {
      console.log("received message : joined")
      display_message(obj.id+" joined the room");
      display_message(JSON.stringify(obj, null, 4));
      });
  io_socket.on('play_now', function(obj) {
      console.log("received message : play_now")
      display_message("message : play_now");
      display_message(JSON.stringify(obj, null, 4));
      io_socket.emit("received_play_now", obj);
      });
  io_socket.on('received_play_now', function(obj) {
      console.log("received message : received_play_now")
      display_message("received received_play_now : "+obj.label);
      });
  io_socket.on('connecting', function() {
      display_message("Socket connecting");
      });
  io_socket.on('request_connection', function() {
      var room_id = $("#subscribe").val();
      display_message("received request_connection");
      io_socket.emit("connection_request_received", {room: room_id});
      });
  io_socket.on('connection_request_received', function() {
      display_message("received connection_request_received");
      });
  io_socket.on('connect_failed', function() {
      display_message("Socket connect_failed");
      });
  io_socket.on('tv_status', function(obj) {
      display_message("TV Status, connected : "+obj.connected);
      });
  io_socket.on('disconnect', function() {
      display_message("Socket disconnect");
      });
  io_socket.on('error', function(msg) {
      if(typeof msg !== 'undefined' && msg == 'Authentication Failure'){
      display_message("Socket auth error");
      } else {
      display_message("Socket error");
      }
      });
  io_socket.on('reconnect', function() {
      display_message("Socket reconnect");
      });
  io_socket.on('reconnecting', function() {
      display_message("Socket reconnecting");
      });
  io_socket.on('reconnect_failed', function() {
      display_message("Socket reconnect_failed");
      });
}
var display_message = function(msg) {
  var text = document.getElementById("inbox").value;
  msg = ISODateString(new Date()) + ' ' + msg;
  document.getElementById("inbox").value = msg + "\n" + text;
};
var ISODateString = function(d){
  function pad(n){return n<10 ? '0'+n : n}
  return d.getUTCFullYear()+'-'
    + pad(d.getUTCMonth()+1)+'-'
    + pad(d.getUTCDate())+'T'
    + pad(d.getUTCHours())+':'
    + pad(d.getUTCMinutes())+':'
    + pad(d.getUTCSeconds())+'Z';
};
var do_ping = function () {
  var room_id = $("#subscribe").val();
  io_socket.emit("request_connection", { room : room_id })
}
var do_subscribe = function() { 
  var room = $("#subscribe").val();
  var client = $("#clients").val();
  io_socket.emit("subscribe", { room : room, role : client });
  display_message("Subscribed to:"+room+", client : "+client);
};
var do_send = function() {
  var event_type = $("#event_type").val();
  var room_id = $("#subscribe").val();
  var source = $("#sources").val();
  var data = sources[source]; 
  io_socket.emit(event_type, { 
    'room' : room_id,
    'source' : source,
    'link': data.link,
    'label': data.label
  });
};
$(document).ready(function() {
    console.log("ready")
    connect();
    });
</script>
</head>
<body>
Room ID: <input id="subscribe" type="text" size=20 /><input type="button" onclick="do_subscribe();" value="Subscribe" /><br /><br />
Event Type: <input id="event_type" type="text" size=20 value="play_now" /><br />
Data:<br />
<select id="sources" name="sources">
<option value="youtube">YouTube</option>
<option value="youtube_purchase">YouTube (Purchase)</option>
<option value="hulu_free">Hulu Free</option>
<option value="hulu_plus">Hulu Plus</option>
<option value="google_play">Google Play</option>
<option value="netflix">Netflix</option>
</select>
<select id="clients" name="clients">
<option value="mobile">Mobile</option>
<option value="tv">TV</option>
</select>
<input type="button" onclick="do_send();" value="Send" />
<input type="button" onclick="do_ping();" value="Ping" />
<br />
<br />
<br />
Log:<br />
<textarea id="inbox" rows="20", cols="80" readonly></textarea><br />
</body>
</html>
